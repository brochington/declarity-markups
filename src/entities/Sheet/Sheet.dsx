import * as THREE from 'three'

const loader = new THREE.TextureLoader()

function setTexture(texture, params) {
    const {setState, context, state} = params
    const {scene} = context
    const {sheet} = state

    let material = new THREE.MeshBasicMaterial({
        map: texture
    })
    sheet.material = material
    // console.log(sheet)

    setState({sheet})
    // const sheet = new THREE.Mesh(geometry, material)
    // scene.add(sheet)
}

class Sheet {
    create = ({context, props, getParams}) => {
        const {scene} = context
        const {color, image} = props

        const myImg = document.createElement('img')

        myImg.addEventListener('load', (s) => {
            // console.dir(s.target)
            const {state: {sheet}} = getParams()
            sheet.geometry = new THREE.PlaneGeometry(s.target.naturalWidth, s.target.naturalHeight)
            // console.log(params.state)
            loader.load(image, (texture) => {
                setTexture(texture, getParams())
            })
        })

        myImg.src = image;

        const geometry = new THREE.PlaneGeometry(4, 4)
        geometry.computeFaceNormals();

        const material = new THREE.MeshPhongMaterial({color: 0x000000})
        material.shininess = 100
        material.side = THREE.DoubleSide
        const sheet = new THREE.Mesh(geometry, material)

        // sheet.rotation.x = 20 * (Math.PI / 180)

        scene.add(sheet)

        return {sheet}
    }

    update = ({state}) => {
        const {sheet} = state

        // sheet.rotation.x = -10 * (Math.PI / 180)

    }
}

export default Sheet
